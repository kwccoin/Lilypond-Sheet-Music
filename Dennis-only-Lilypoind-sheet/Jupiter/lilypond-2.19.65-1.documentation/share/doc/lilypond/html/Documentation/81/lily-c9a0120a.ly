%% Generated by lilypond-book.py
%% Options: [exampleindent=10.16\mm,indent=0\mm,line-width=160\mm]
\include "lilypond-book-preamble.ly"


% ****************************************************************
% Start cut-&-pastable-section
% ****************************************************************



\paper {
  indent = 0\mm
  line-width = 160\mm
  % offset the left padding, also add 1mm as lilypond creates cropped
  % images with a little space on the right
  line-width = #(- line-width (* mm  3.000000) (* mm 1))
}

\layout {
  
}





% ****************************************************************
% ly snippet:
% ****************************************************************
\sourcefilename "utf-8.ly"
\sourcefileline 0
% DO NOT EDIT this file manually; it is automatically
% generated from Documentation/snippets/new
% Make any changes in Documentation/snippets/new/
% and then run scripts/auxiliar/makelsr.py
%
% This file is in the public domain.
%% Note: this file works from version 2.19.12
\version "2.19.12"

\header {
%% Translation of GIT committish: 9c379d799d81429fff6392c639dffef526bd5db9
  texidoces = "
Se pueden usar varios sistemas de escritura para textos (como títulos
o la letra de las canciones) si se introducen en la codificación
UTF-8, y utilizando un motor basado en Pango.  Dependiendo de las
tipografías instaladas, este fragmento compone textos en Búlgaro
(cirílico), hebreo, japonés y portugués.

"
  doctitlees = "UTF-8"

%% Translation of GIT committish: 1d347c959f434118436b0f1c08fd0b7b37c98dac
  texidocfr = "
Différents éléments textuels peuvent s'ajouter à la notation, comme des
titres ou des paroles, dès lors qu'ils sont encodés en UTF-8, grâce à un
moteur de rendu reposant sur Pango. Selon les fontes disponibles
devraient apparaître quatre lignes de texte : en bulgare (en
cyrillique), en hébreux, en japonais et en portugais.

"
  doctitlefr = "UTF-8"

  lsrtags = "text"

  texidoc = "
Various scripts may be used for texts (like titles and lyrics) by
entering them in UTF-8 encoding, and using a Pango based backend.
Depending on the fonts installed, this fragment will render Bulgarian
(Cyrillic), Hebrew, Japanese and Portuguese.

"
  doctitle = "UTF-8"
} % begin verbatim

% end verbatim - this comment is a hack to prevent texinfo.tex
% from choking on non-European UTF-8 subsets

%% Edit this file using a Unicode aware editor, such as GVIM, GEDIT, Emacs

%{

You may have to install additional fonts.

Red Hat Fedora

	linux-libertine-fonts (Latin, Cyrillic, Hebrew)
	ipa-mincho-fonts ipa-gothic-fonts (Japanese)

Debian GNU/Linux, Ubuntu

	fonts-linuxlibertine (Latin, Cyrillic, Hebrew)
	fonts-ipafont (Japanese)

%} % begin verbatim


% Font settings for Cyrillic and Hebrew
% Linux Libertine fonts contain Cyrillic and Hebrew glyphs.
\paper {
  #(define fonts
    (set-global-fonts
     #:roman "Linux Libertine O,serif"
     #:sans "Linux Biolinum O,sans-serif"
     #:typewriter "Linux Libertine Mono O,monospace"
   ))
}

% Cyrillic font
bulgarian = \lyricmode {
  Жълтата дюля беше щастлива, че пухът, който цъфна, замръзна като гьон.
}

hebrew = \lyricmode {
  זה כיף סתם לשמוע איך תנצח קרפד עץ טוב בגן.
}

japanese = \lyricmode {
  いろはにほへど ちりぬるを
  わがよたれぞ  つねならむ
  うゐのおくや  まけふこえて
  あさきゆめみじ ゑひもせず
}

% "a legal song to you"
portuguese = \lyricmode {
  à vo -- cê uma can -- ção legal
}

\relative c' {
  c2 d
  e2 f
  g2 f
  e1
}
\addlyrics { \bulgarian }
\addlyrics { \hebrew }
\addlyrics { \japanese }
\addlyrics { \portuguese }



% ****************************************************************
% end ly snippet
% ****************************************************************
